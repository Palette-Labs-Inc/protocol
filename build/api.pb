
3.0.0g
protocol api specification#transaction lifecycle specification"engineering@noshdelivery.io20.0.0"Ë
Î
/searchﬂ2‹
Provider Supporting Node (PSN)
Gateway Provider (GP)SearchJThe <code>BSN</code> broadcasts the buyer's request for goods and services:%#
!#/components/requestBodies/SearchB(
&$
"#/components/responses/PSNResponse
ç

/on_search˛2˚
Buyer Supporting Node (BSN)
Gateway Provider (GP)On Search Callback^The <code>BSN</code> responds the buyer's request for goods and services with a provider list.:'%
##/components/requestBodies/OnSearchB(
&$
"#/components/responses/BSNResponse
ƒ
/select∏2µ
Provider Supporting Node (PSN)Select Item5The <code>Buyer</code> selects items from the catalog:%#
!#/components/requestBodies/SelectB(
&$
"#/components/responses/PSNResponse
Õ

/on_selectæ2ª
Buyer Supporting Node (BSN)On Select Callback5The <code>Buyer</code> selects items from the catalog:'%
##/components/requestBodies/OnSelectB(
&$
"#/components/responses/BSNResponse
µ
/init´2®
Provider Supporting Node (PSN)MThe Buyer Initializes a Cart by providing fulfillment and contact informationhThe <code>Buyer</code> initializes their order by providing personal information and fulfillment details:#!
#/components/requestBodies/InitB(
&$
"#/components/responses/PSNResponse
„
/on_init÷2”
Buyer Supporting Node (BSN)~OnInit Callback, includes the latest cart and the refund, cancellation, payment, and fulfillment terms of the <code>PSN</code>‚The <code>PSN</code> responds to an initialized cart with full payment terms, refund terms, cancellation terms, etc. Typically this callback provides data for the <code>Buyer</code> in a checkout screen in a client application:%#
!#/components/requestBodies/OnInitB(
&$
"#/components/responses/BSNResponse
Ñ
/status¯2ı
Provider Supporting Node (PSN).The BSN attempts to get the status of an OrderRThe <code>Buyer</code> checks for the status of an order from the <code>PSN</code>:%#
!#/components/requestBodies/StatusB(
&$
"#/components/responses/PSNResponse
Ñ

/on_statusı2Ú
Buyer Supporting Node (BSN)KOnStatus Callback, the <code>PSN</code> responds with the most recent Order3The <code>PSN</code> responds with the Order object:'%
##/components/requestBodies/OnStatusB(
&$
"#/components/responses/BSNResponse
ù
/cancelë2é
Provider Supporting Node (PSN)#The BSN attempts to cancel an OrderRThe <code>Buyer</code> checks for the status of an order from the <code>PSN</code>:»	
≈	
1A <code>Buyer</code>'s request to cancel an Orderè	
å	
application/json˜
Ù
Ò∫action∫message∫callback_reference∫bsn_parameters object˙´

action
¬	CANCEL

ˇ
callback_referenceË
Â∫transaction_id∫
message_id object˙õ
ú
transaction_idâ
Ü stringíza unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
z

message_idl
j stringí^generated by the <code>BSN</code> - a unique id representing a specific request/callback cycleíõthe reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
Ú
bsn_parametersﬂ
‹∫uid∫name∫callback_url object˙≥
3
uid,*
(#/components/schemas/Node/properties/uid
5
name-+
)#/components/schemas/Node/properties/name
E
callback_url53
1#/components/schemas/Node/properties/callback_url
ó
messageã
à∫order_id∫reason object˙Á
8
order_id,*
(#/components/schemas/Order/properties/id
3
reason)
' stringíThe reason for cancellation
v
additional_description\Z
#/components/schemas/Descriptor7Additional information regarding the cancellation eventB(
&$
"#/components/responses/PSNResponse
Ñ

/on_cancelı2Ú
Buyer Supporting Node (BSN)KOnCancel Callback, the <code>PSN</code> responds with the most recent Order3The <code>PSN</code> responds with the Order object:'%
##/components/requestBodies/OnCancelB(
&$
"#/components/responses/BSNResponse*⁄Î
àÍ
€

LocationŒ

À
JLocation object˙á

£
addressLine1í
è stringíÇFields that start with address_line provide the address's most specific details, like street number, street name, and building name. They do not provide less specific details like city, state/province, or country (these details are provided in other fields).
E
addressLine25
3 stringí'The second line of the address, if any.
9
locality-
+ stringíThe city or town of the address
R
sublocalityC
A stringí5A civil region within the address's locality, if any.
V
sublocality2F
D stringí8A civil region within the address's sublocality, if any.
W
sublocality3G
E stringí9A civil region within the address's sublocality2, if any.
x
administrativeDistrictLevel1X
V stringíJA civil entity within the address's country. In the US, this is the state.
ë
administrativeDistrictLevel2q
o stringícA civil entity within the address's administrative_district_level_1. In the US, this is the county.
z
administrativeDistrictLevel3Z
X stringíLA civil entity within the address's administrative_district_level_2, if any.
d

postalCodeV
T stringíHThe address's postal code. For a full list of field meanings by country.
3
countryCode$"
 #/components/schemas/CountryCode
3
coordinates$"
 #/components/schemas/Coordinatesí*provides details about a physical location
Ω	

DescriptorÆ	
´	 object˙Ø
1
name)
' stringíName of the item or entity.
_

identifierQ
O stringíCA unique identifier, which could be a code or a system-specific ID.
A
shortDescription-
+ stringíA brief description or summary.
]
detailedDescriptionF
D stringí8An extended description providing more in-depth details.
Ω

attributesÆ
´ arrayÚ:
8
6 object˙*

key
	 string

value
	 stringícA collection of key-value pairs for additional attributes that do not fit into the standard schema.
ô
mediaè
å arrayÚ$
" 
#/components/schemas/MediaFileíZA collection of media files related to the item, such as documents, audio, or video files.
s
imagesi
g arrayÚ$
" 
#/components/schemas/ImageFileí5A collection of image files associated with the item.
Ø
links•
¢ arrayÚF
D
B object˙6

description
	 string

url
 stringöuriíNWeb links, including social media, official websites, or additional resources.
t
tagsl
j arrayÚ

	 stringíOTags or keywords associated with the item for easier categorization and search.ílComprehensive description of something, accommodating a broad spectrum of attributes, physical or otherwise.
à
Cancellation˜
Ù object˙¿
U
timeM
K stringí3Date-time when the order was cancelled by the buyerö	date-time
4
cancelled_by$
"¬BUYER
¬	PROVIDER
 string
3
reason)
' stringíThe reason for cancellation
|
additional_descriptionb
`“#!
#/components/schemas/Descriptorí7Additional information regarding the cancellation eventí$Describes a cancellation of an order
≈
Fulfillmentµ
≤ object˙Î
F
id@
> stringí2Unique reference ID to the fulfillment of an order
`
modeXV
$#/components/schemas/FulfillmentMode.A code that describes the mode of fulfillment.
⁄
statusœ
Ã“*(
&#/components/schemas/FulfillmentStatusíõThe current state of fulfillment. The BPP must set this value whenever the state of the order fulfillment changes and fire an unsolicited `on_status` call.
Ç
expected_fulfillment_timee
c integeríJthe expected fulfillment time of the Order in the local time of the Buyer.ö	date-time
5
tracking_details!
#/components/schemas/Tracking
p
agentg
e“
#/components/schemas/AgentíAThe agent that is currently handling the fulfillment of the order
+
contact 
#/components/schemas/Contact
Ü
delivery_waypointsp
n arrayÚ#
!
#/components/schemas/Locationí=The list of logical stops during the fulfillment of an order.í7Describes how a an order will be fulfilled to the Buyer
™
Contactû
õJContact information object˙»
n
cell_phone_numberYW
#/components/schemas/CellPhone5A publicly listed cell phone number for the merchant.
V
email_addressE
C stringí7The email address associated with the customer profile.í.Describes the contact information of an entity
…
Trackingº
π object˙·
6
id0
. stringí"A unique tracking reference number
7
url0
. stringíA URL to a tracking endpointöuri
π
location¨
©“!
#/components/schemas/LocationíÅIf the url does not provide realtime tracking information, this value can contain the location of the agent fulfilling the order.
±
status¶
£¬	ACTIVE
¬	COMPLETE
 stringí¸This value indicates if the tracking is currently active or not. If this value is `active`, then the BAP can begin tracking the order. If this value is `inactive`, the tracking URL is considered to be expired and the BAP should stop tracking the order.íHContains tracking information about tracking details related to an Order

Decimal
 
Û
ValueÈ
Ê object˙≈
/
type'
%¬	CONSTANT
¬	VARIABLE
 string
)
value 
#/components/schemas/Decimal
3
estimated_value 
#/components/schemas/Decimal
2
computed_value 
#/components/schemas/Decimal
i
range`
^ object˙R
'
min 
#/components/schemas/Decimal
'
max 
#/components/schemas/Decimal

unit
	 stringíDescribes a value
È
Ack·
ﬁ object˙Ø
¨
status°
û¬ACK
¬NACK
 stringí˛The status of the acknowledgment. If the request meets the validation criteria of the Provider Supporting Node, then this is set to ACK. If a Provider Supporting Node responds with status = `ACK` to a request, it is obligated to respond with a callback. If the request does not meet the validation criteria, then this is set to NACK. Additionally, if a Provider Supporting Node does not intend to respond with a callback even after the request meets the validation criteria, it should set this value to `NACK`.íûDescribes the acknowledgement sent in response to an API call. If the implementation utilizes HTTP/S, then Acknowledgment must be returned in the same session. Every API call to a Provider Supporting Node must be responded to with an Acknowledgment whether the Provider Supporting Node intends to respond with a callback or not. This has one property named `status` that indicates the status of the Acknowledgment.
∞
Error¶
£JError∫display_message∫
error_code object˙
?
display_message,
* stringíA human readable error message
∏

error_code©
¶¬INTERNAL_SERVER_ERROR
¬UNAUTHORIZED
¬CERTIFICATE_EXPIRED
¬
FORBIDDEN
¬BAD_REQUEST
¬INCORRECT_TYPE
¬INVALID_PAGINATION_ARGUMENTS
¬MISSING_REQUIRED_PARAMETER
¬UNKNOWN_QUERY_PARAMETER
¬VALUE_REGEX_MISMATCH
¬VALUE_TOO_SHORT
¬VALUE_TOO_LONG
¬VALUE_TOO_LOW
¬VALUE_TOO_HIGH
¬VALUE_EMPTY
¬INVALID_CONTENT_TYPE
¬BLOCKED_BY_SERVER
 stringíA specific error code
r
fieldi
g stringí[The name of the field provided in the original request (if any) that the error pertains to.
ƒ
LanguageCode≥
∞JLanguage Code¬en-US
 stringíâThe code indicating a language preference, in [BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A). For example, en-US or fr-CA.
∆
CurrencyCodeµ
≤JCurrency Code¬USD
 stringíçA currency code in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) format. For example, the currency code for US dollars is USD.
¥
CountryCode§
°JCountry Code¬US
 stringíA country code, in the two-letter format of [ISO 3166](https://www.iso.org/iso-3166-country-codes.html). For example, US or JP.
“
Coordinates¬
ø object˙{
;
latitude/
- numberíThe latitude coordinate.ödouble
<
	longitude/
- numberíThe longitude coordinateödoubleí5Defines a latitudinal and longitudinal point in space
ï
H3Arrayâ
ÜJH3 Array arrayÚM
K
I stringí=An H3 index represented as a 15-character hexadecimal string.í!An array of H3 geospatial indices
d
NetworkRoleU
SJNetwork Role¬BSN
¬PSN
¬GP
 stringíThe role of node in the network
é
MoneyÑ
ÅJMoney object˙˙
ø
amount¥
± integeríõThe amount of money, in the smallest denomination of the currency indicated by currency. For example, when currency is USD, amount is in cents. Monetary amounts can be positive or negative. See the specific field description to determine the meaning of the sign in a particular case.öint64
6
currency_code%#
!#/components/schemas/CurrencyCodeípA price associated with a product, service, or fulfillment method, or other charge associated with a transaction
ı
FeeÌ
ÍJFee∫title∫description∫amount object˙˝
ä
titleÄ
~ stringírA human-readable title for the fee. Useful to display in a Receipt or similar interface on a mobile or web client.
n
description_
] stringíQA human-readable description of the fee associated with this <code>CartFee</code>
F
amount<
: stringí.The chargeable amount of this <code>Fee</code>
6
currency_code%#
!#/components/schemas/CurrencyCodeí9The costs that a <code>Buyer</code> will pay at checkout.
÷
MerchantCategoryCodeΩ
∫JMerchant Category CodexÄ stringíêA four-digit number that describes the kind of goods or services sold by the provider. The [merchant category code (MCC)](https://www.iso.org/standard/33365.html) of the merchant is standardized by ISO 18245. For example, 5045, for a location that sells computer goods and software. <ul> <li>[USDA MCC directory](https://www.dm.usda.gov/procurement/card/card_x/mcc.pdf)</li> <li>[Visa Merchant Data Standards Manual](https://usa.visa.com/content/dam/VCOM/download/merchants/visa-merchant-data-standards-manual.pdf)</li> <li>[Citibank MCC list](https://www.citibank.com/tts/solutions/commercial-cards/assets/docs/govt/Merchant-Category-Codes.pdf)</li> </ul>
’
	CellPhone«
ƒJ
Cell Phone∫country_phone_code∫cell_phone_number˙°
v
country_phone_code`
^ä^\+\d+$ stringíHThe country phone code in E.164 format (e.g., +1 for the United States).
G
cell_phone_number2
0ä^\d+$ stringíThe local cell phone number.
^
	extensionQ
Oä^\d*$ stringí;An optional extension or additional digits (if applicable).Ç íban object representing an [E.164](https://en.wikipedia.org/wiki/E.164) formatted cell phone number
Å
Urlz
xJURLä^https:\/\/[^\s/$.?#].[^\s]*$ stringíGRepresents an RFC 3986-compliant URI string, limited to HTTPS protocol.
Ñ
	ImageFileˆ
ÛJ
Image File object˙ó
)
	image_url
#/components/schemas/Url
3
width*
( stringíWidth of the image in pixels
5
height+
) stringíHeight of the image in pixelsí@Defines an image that can be affiliated with an entity or object
Ø
	MediaFile°
û object˙„
¶
mimetypeô
ñ stringíâindicates the nature and format of the document, file, or assortment of bytes. MIME types are defined and standardized in IETF's RFC 6838
8
url1/
#/components/schemas/UrlThe URL of the fileí+This object contains a url to a media file.
¥
FulfillmentStageü
úJFulfillment Stage¬
PRE-ORDER
¬AT-CHECKOUT
¬PRE-FULFILLMENT
¬ON-FULFILLMENT
¬POST-FULFILLMENT
 stringíDefines the status of an order
≠
FulfillmentModeô
ñJFulfillment Mode¬LOCAL-PICKUP
¬LOCAL-DELIVERY
¬	SHIPMENT
¬APPOINTMENT
 stringí3Defines a method for acquiring a product or service
‡
FulfillmentStatus 
«JFulfillment Status¬
PENDING
¬CONFIRMED_BY_PROVIDER
¬DECLINED_BY_PROVIDER
¬IN_PROGRESS
¬COMPLETED_BY_PROVIDER
¬SCHEDULED_BY_PROVIDER
 stringíDefines the status of an order
á
ItemType˙
˜J	Item Type¬
ALCOHOL
¬FOOD
¬
REGULAR
¬><SCHEDULED_SERVICE (e.g. a lawn service or delivery service)
¬.,ON_DEMAND_SERVICE (e.g. on-demand delivery)
 stringíJThe available <code>Item</code> types. Defined by global network policies.
ç
OrderStatus˝
˙JOrder Status¬
SCHEDULED
¬
NEW_ORDER
¬
CONFIRMED
¬
PICKED_UP
¬	CANCELED
¬
FULFILLED
¬	PREPARED
¬	REJECTED
¬FAILED_TO_CREATE
¬
UNKNOWN
 stringíHStatus of the order. Allowed values can be defined by the network policy
◊
CatalogÀ
»JCatalog object˙›
1

descriptor#!
#/components/schemas/Descriptor
y
	schedulesl
j arrayÚ#
!
#/components/schemas/Scheduleí9Defines the availability of the items within this catalog
è
catalog_categoriesy
w arrayÚ*
(&
$#/components/schemas/CatalogCategoryí?<code>CatalogCategory</code> items affiliated with this catalog
u
catalog_itemsd
b arrayÚ&
$"
 #/components/schemas/CatalogItemí.all <code>CatalogItem</code>'s in this catalog
í
catalog_modifier_groupsw
u arrayÚ/
-+
)#/components/schemas/CatalogModifierGroupí8all <code>CatalogModifierGroup</code>'s' in this catalog
é
catalog_item_modifierst
r arrayÚ.
,*
(#/components/schemas/CatalogItemModifierí6all <code>CatalogItemModifier</code>'s in this catalogíRDefines a specific collection of <code>CatalogItem</code>'s available for purchase
÷
CatalogCategory¬
øJCatalog Category object˙Ø
M
idG
E stringí9A unique identifier for this <code>CatalogCategory</code>
1

descriptor#!
#/components/schemas/Descriptor
î
item_idsá
Ñ arrayÚ4
20
.#/components/schemas/CatalogItem/properties/idíBA list of <code>CatalogItem</code>'s affiliated with this category
ì
ordinalá
Ñ integeríoDetermines the PSNs intended position of this <code>CatalogCategory></code> appears in the <code>Catalog</code>öint32ínA category to which a <code>CatalogItem</code> instance belongs. Used to group items for ease in exlporations.
å
CatalogItem¸
˘JCatalog Item object˙™
I
idC
A stringí5A unique identifier for this <code>CatalogItem</code>
1

descriptor#!
#/components/schemas/Descriptor
.
	item_type!
#/components/schemas/ItemType
,

item_price
#/components/schemas/Money
x
ordinalm
k integeríVDetermines the position of this <code>CatalogItem></code> in the <code>Category</code>öint32
Ú
inventory_status›
⁄¬	FOR_SALE
¬NOT_FOR_SALE
¬LOW_QUANTITY
 objectíõRepresents whether this item is currently for sale. <code>Low Quantity</code> is calculated and defined by the <code>Provider Supporting Node (PSN)</code>.
2
preparation_time
#/components/schemas/Value
G
supported_fulfillment_modes(&
$#/components/schemas/FulfillmentMode
`
modifier_group_idsJ
H arrayÚ=
;9
7#/components/schemas/CatalogModifierGroup/properties/idí1An item in the catalog of a <code>Provider</code>
ˆ
CatalogModifierGroup›
⁄JCatalog Modifier Group object˙ª
R
idL
J stringí>A unique identifier for this <code>CatalogModifierGroup</code>
1

descriptor#!
#/components/schemas/Descriptor
á
minimum_selection_requirementf
d integerä		      ?íCThe minimum number of <CatalogItemModifier>'s selections to satisfyöint32
á
maximum_selection_requirementf
d integerä		      ?íCThe minimum number of <CatalogItemModifier>'s selections to satisfyöint32
¿
#max_per_modifier_selection_quantityò
ï integerä		      ?íÛMaximum number of selections customers can make for each modifier item in this ModifierGroup. 0 means there is no limit to how many times they can select a single modifier item. If not specified, a value of 1 will be used as the default value.öint32
⁄
modifier_item_idsƒ
¡ arrayÚ<
:8
6#/components/schemas/CatalogItemModifier/properties/idíwA list of <code>CatalogItem</code>'s listed under this modifier group. Modifier Items are represented as Catalog Items.íwA modifier group that contains <code>Modifier</code>'s' to handle specifications related to <code>CatalogItem</code>'s.
ò
CatalogItemModifierÄ
˝JCatalog Item Modifier object˙≠
Q
idK
I stringí=A unique identifier for this <code>CatalogItemModifier</code>
1

descriptor#!
#/components/schemas/Descriptor
'
price
#/components/schemas/Money
à
ordinal}
{ integerífDetermines where this <code>CatalogItemModifier></code> appears in a <code>CatalogModifierGroup</code>öint32

inventory_status€
ÿ¬	FOR_SALE
¬NOT_FOR_SALE
¬LOW_QUANTITY
 objectíôRepresents whether this item is currently for sale. <code>Low Quanttiy</code> is calculated and defined by the <code>Seller Supporting Node (SSN)</code>.
G
supported_fulfillment_modes(&
$#/components/schemas/FulfillmentMode
;
images1
/ arrayÚ$
" 
#/components/schemas/ImageFile
x
featured_imagefd
#/components/schemas/ImageFileBFunctionally equivalent to <code>descriptor.images(first:1)</code>í)An modifier to a <code>CatalogItem</code>
«
ItemQuantity∂
≥ object˙˚
÷
	available»
≈ object˙B

count

 integer
)
measure
#/components/schemas/ValueítThis represents the exact quantity available for purchase of the item. The buyer can only purchase multiples of this
ü
selectedí
è object˙B

count

 integer
)
measure
#/components/schemas/Valueí>This represents the quantity selected for purchase of the itemí(Describes the count or amount of an item
˜	
OrderÌ	
Í	JOrder∫id∫
created_at∫
updated_at∫cost∫cart_line_items∫status∫provider∫terms∫fulfillment_details object˙¸
B
id<
: stringí.A globally unique ID of the <code>Order</code>
O

created_atA
? stringí'The date-time of creation of this orderö	date-time
N

updated_at@
> stringí&The date-time of updated of this orderö	date-time
=
cost53
#/components/schemas/CostThe final cost object.
à
cart_line_itemsu
s arrayÚ'
%#
!#/components/schemas/CartLineItemí>An array of selected <code>CartLineItem</code>s in this order.
D
status:8
 #/components/schemas/OrderStatusStatus of the order.
R
providerFD
#/components/schemas/Provider#the provider fulfilling this order.
≠
order_notesù
ö stringíçspecial instructions needed to fulfill this order. For example, a note for a merchant from a buyer about a specific request with their order.
§
termsöó
#/components/schemas/Termsythe contractual terms of this order when a Cart was confirmed, cancellation, payment, and fulfillment terms of this order
Z
cancellationJH
!#/components/schemas/Cancellation#details of this orders cancellationímDescribes a purchase order. It contains the complete details of the order between the buyer and the provider.
¶
Costù
öJCosts∫subtotal_amount∫total_amount∫total_fees_amount∫	cart_fees object˙â
{
subtotal_amounthf
#/components/schemas/MoneyHThe amount, before taxes and cart-level discounts, for the buyer to pay.
a
total_amountQO
#/components/schemas/Money1Defines the total amount for the customer to pay.
f
total_fees_amountQO
#/components/schemas/Money1Defines the total amount for the customer to pay.
æ
feesµ
≤ arrayÚ

#/components/schemas/FeeíÖAn array of fees associated with the <code>Cart</code>, the sum of <code>CartFee</code> amounts must equal the totalFeesAmount value.í9The costs that a <code>Buyer</code> will pay at checkout.
Û
BuyerÈ
ÊJBuyer∫id∫
first_name∫	last_name∫default_address∫contact_information object˙–
e
id_
] stringíQA globally unique ID of the customer in the Seller Supporting Node's (SSN) system
<

first_name.
,xd stringíThe first name of the customer
:
	last_name-
+xd stringíThe last name of the customer
4
default_address!
#/components/schemas/Location
7
contact_information 
#/components/schemas/Contactí∏Defines details about a buyer, such as contact details. This information is sent from a Buyer Supporting Node (BSN) to a Seller Supporting Node (SSN) during a customers payment intent.
Œ
Provider¡
æJProvider object˙¨

‘
idÕ
  stringíΩA globally unique ID of the provider in the Provider Supporting Node's (PSN) system. Can be used to query the specific provider for detailed information in another, directed search request.
1

descriptor#!
#/components/schemas/Descriptor
}
locationqo
#/components/schemas/LocationNthe physical location of the provider, if the provider has a specific location
Ø
!supported_merchant_category_codesâ
Ü arrayÚ/
-+
)#/components/schemas/MerchantCategoryCodeíIArray of category codes, each adhering to the MerchantCategoryCode schema
Ω
supported_fulfillment_modesù
ö arrayÚ*
(&
$#/components/schemas/FulfillmentModeíbArray of fulfillment modes supported by this provider, each adhering to the FulfillmentMode schema
4
country_code$"
 #/components/schemas/CountryCode
6
language_code%#
!#/components/schemas/LanguageCode
6
currency_code%#
!#/components/schemas/CurrencyCode
°
catalogsî
ë arrayÚ"
 
#/components/schemas/CatalogíaThe catalogs for this provider. If empty, the PSN did not return catalogs for the initial search.
‰
operational_statusÕ
 ¬OPEN
¬	CLOSED
¬CLOSING_SOON
 stringíïDefines the operational state of a business at the time of the request and is calculated by the SSN as a reference to the composite of Menu SchedulesíxDefines details about a provider and specifies information that a Buyer Supporting Node (BSN) can display to it's users.
§
Nodeõ
òJNode object˙√
É
uid|
zä^[0-9a-fA-F]{64}$ stringíZUnique identifier of the node in the registry, represented as a 32-byte hexadecimal string
&
name
 stringíName of the node
d
callback_urlTR
#/components/schemas/Url6The publicly hosted url of the node's protocol server.
6
serviceable_region 
#/components/schemas/H3Array
B
industry_code1
/ stringí#Industry code relevant to the node.
1
	node_type$"
 #/components/schemas/NetworkRoleí?A structure representing a node entry in the network's registry
Ë
Person›
⁄ object˙¶
8
id2
0 stringí$Describes the identity of the person
,
name$
" stringíthe name of the person
@
image75
#/components/schemas/ImageFileimage of the person
7
dob0
. stringíDate of birth of the personödate
A
	languages4
2 arrayÚ'
%#
!#/components/schemas/LanguageCodeí$Describes a person as any individual
Â
Agent€
ÿ˙è
)
person
#/components/schemas/Person
+
contact 
#/components/schemas/Contact
5
organization%#
!#/components/schemas/Organizationí¡Describes the direct performer, driver or executor that fulfills an order. It is usually a person. But in some rare cases, it could be a non-living entity like a drone, or a bot. Some examples of agents are Doctor in the healthcare sector, a driver in the mobility sector, or a delivery person in the logistics sector. This object can be set at any stage of the order lifecycle. This can be set at the discovery stage when the BPP wants to provide details on the agent fulfilling the order, like in healthcare, where the doctor's name appears during search. This object can also used to search for a particular person that the customer wants fulfilling an order. Sometimes, this object gets instantiated after the order is confirmed, like in the case of on-demand taxis, where the driver is assigned after the user confirms the ride.
’
Organizationƒ
¡ object˙˙
,
name$
" stringíthe name of the person
@
image75
#/components/schemas/ImageFileimage of the person
[
locationO
M“!
#/components/schemas/Locationí&The postal address of the organization
+
contact 
#/components/schemas/Contactí7An organization. Usually a business entity like an LLC.
≤
Cart©
¶JCart∫id∫cost∫cart_line_items object˙ç
A
id;
9 stringí-A globally unique ID of the <code>Cart</code>
N

created_at@
> stringí&The date-time of creation of this cartö	date-time
M

updated_at?
= stringí%The date-time of updated of this cartö	date-time
I
provider=;
#/components/schemas/Providerthe provider for this cart
ô
costêç
#/components/schemas/CostÔThe estimated costs that will be charged to the Buyer. If the order has not been initialized, the costs are subject to change. The PaymentTerm returned when the cart is initialized represents when the cost object can no longer be modified.
ë
cart_line_items~
| arrayÚ'
%#
!#/components/schemas/CartLineItemíGAn array of currently selected <code>CatalogItem</code>s in this order.
≠
order_notesù
ö stringíçspecial instructions needed to fulfill this order. For example, a note for a merchant from a buyer about a specific request with their order.íeDescribes the current details of a <code>Buyer</code>'s selection during their transaction lifecycle.
ä	
CartLineItem˘
ˆJPA CatalogItem selected by a Buyer, in the cart returned by the OnSelect Callback∫id∫catalog_item_id∫quantity∫price object˙
w
idq
o stringíca globally unique identifier for this specific customer's Catalog selections in a <code>Cart</code>
¥
catalog_item_id†ù
.#/components/schemas/CatalogItem/properties/idkThe identifier of the <code>CatalogItem</code> from the <code>Catalog</code> in the <code>SSN</code> server
 
quantity
 integeröint32
X
cart_line_item_modifiers<
: arrayÚ/
-+
)#/components/schemas/CartLineItemModifier
‹
special_instructions√
¿ stringí≥represents a specific, item level note. Typically used by a Merchant to fulfill a specific request form the Buyer that is not satisified within the core CatalogItem specificaiton.
,

item_price
#/components/schemas/Money
;
images1
/ arrayÚ$
" 
#/components/schemas/ImageFile
x
featured_imagefd
#/components/schemas/ImageFileBFunctionally equivalent to <code>descriptor.images(first:1)</code>ízAn single <CatalogItem> reference with a quantity and the <code>Buyer</code>s <code>CatalogItemModifier</code> selections.
ù
CartLineItemModifierÑ
ÅJxA Modifier selected for a CatalogItem by a Buyer. This data is represented in the Cart returned by the OnSelect Callback∫id∫catalog_modfifier_item_id∫quantity∫price object˙…
w
idq
o stringíca globally unique identifier for this specific customer's Catalog selections in a <code>Cart</code>
∆
catalog_modfifier_item_id®•
6#/components/schemas/CatalogItemModifier/properties/idkThe identifier of the <code>CatalogItem</code> from the <code>Catalog</code> in the <code>SSN</code> server
 
quantity
 integeröint32
,

item_price
#/components/schemas/Money
;
images1
/ arrayÚ$
" 
#/components/schemas/ImageFile
x
featured_imagefd
#/components/schemas/ImageFileBFunctionally equivalent to <code>descriptor.images(first:1)</code>ízAn single <CatalogItem> reference with a quantity and the <code>Buyer</code>s <code>CatalogItemModifier</code> selections.
ò
PaymentTermà
ÖJPayment Term∫
charged_at∫processed_at∫transaction_id object˙Ã
s

charged_atec
%#/components/schemas/FulfillmentStage:The stage of an Order when the payment is to be processed.
u
processed_atec
%#/components/schemas/FulfillmentStage:The stage of an Order when the payment is to be processed.
^
transaction_idL
JíGA globally unique reference identifier associated with this transactionínDefines payment settlement term between the Buyer Supporting Node (BSN) and the Provider Supporting Node (PSN)
¯
CancellationTerm„
‡JCancellation Term object˙ê
~
fulfillment_stageig
%#/components/schemas/FulfillmentStage>The stage of fulfillment during which this term is applicable.
\
reason_requiredI
G booleaní:Indicates whether a reason is required to cancel the order
0
cancellation_fee
#/components/schemas/Feeí-Describes the cancellation terms of an order.
ª

RefundTerm¨
©JRefund Term object˙Ë
é
fulfillment_stagey
w arrayÚ+
)'
%#/components/schemas/FulfillmentStageí>The stage of fulfillment during which this term is applicable.
U
refund_eligibleB
@ booleaní3Indicates if a cancellation will result in a refundí$Defines the refund term of an order.
Í
FulfillmentTerm÷
”JFulfillment Term∫available_fulfillment_modes∫selected_fulfillment_modes∫provider_details∫buyer_details object˙„
|
selected_fulfillment_mode_]
$#/components/schemas/FulfillmentMode5The currently selected fulfillment mode for this cart
5
provider_details!
#/components/schemas/Provider
J
buyer_details97
#/components/schemas/BuyerThe location of the buyer
`
fulfillment_timeL
Jí;a date-time specifying when this order should be fulfilled.ö	date-timeípThe terms for fulfilling this order. Typically, this is used when the order is still open and not yet confirmed.
œ
Terms≈
¬JTerms object˙Á
¸
idı
Ú stringíÂa unique identifer for the <code>PSN</code> terms. Terms are returned during search, and when <code>Cart</code>'s are modified. The <code>BSN</code> uses this identifier when establishing a payment intent with an <code>PSN</code>
4
payment_term$"
 #/components/schemas/PaymentTerm
>
cancellation_term)'
%#/components/schemas/CancellationTerm
2
refund_term#!
#/components/schemas/RefundTerm
<
fulfillment_term(&
$#/components/schemas/FulfillmentTermíDTransactional terms as defined by the Provider Supporting Node (PSN)
É
	TimeRangev
t object˙[
Y
rangeP
N object˙B
 
start
 stringö	date-time

end
 stringö	date-timeí
Time Range
´
Scheduleû
õJSchedule object˙ç
n
dayg
e¬	MONDAY
¬
TUESDAY
¬
WEDNESDAY
¬	THURSDAY
¬	FRIDAY
¬	SATURDAY
¬	SUNDAY
 string
ö
available_hoursÜ
É arrayÚ§
°
û object˙ë
≈
openº
π object˙é
C
hour;
9Y      7@ integeríOpening hour in local time.öint32
G
minute=
;Y     ÄM@ integeríOpening minute in local time.öint32íOpening time in local time.
∆
closeº
π object˙é
C
hour;
9Y      7@ integeríClosing hour in local time.öint32
G
minute=
;Y     ÄM@ integeríClosing minute in local time.öint32íClosing time in local time.íPDefines an array of time intervals for the availability of products or services.ítDefines a range of date times in local time for a specific day when products or services are available to purchase.
Œ
§
PSNResponseî
ë
bAcknowledgement of message received by the BSN after successful validation of schema and signature™
ß
application/jsoní
è
å∫psn_parameters∫message object˙‰
Ú
psn_parametersﬂ
‹∫uid∫name∫callback_url object˙≥
3
uid,*
(#/components/schemas/Node/properties/uid
5
name-+
)#/components/schemas/Node/properties/name
E
callback_url53
1#/components/schemas/Node/properties/callback_url
D
message9
7∫ack object˙%
#
ack
#/components/schemas/Ack
'
error
#/components/schemas/Error
§
BSNResponseî
ë
bAcknowledgement of message received by the BSN after successful validation of schema and signature™
ß
application/jsoní
è
å∫message∫bsn_parameters object˙‰
Ú
bsn_parametersﬂ
‹∫uid∫name∫callback_url object˙≥
3
uid,*
(#/components/schemas/Node/properties/uid
5
name-+
)#/components/schemas/Node/properties/name
E
callback_url53
1#/components/schemas/Node/properties/callback_url
D
message9
7∫ack object˙%
#
ack
#/components/schemas/Ack
'
error
#/components/schemas/Error*Ÿo
Œ
Search√
¿
a Buyer's search request£
†
application/jsonã
à
Ö∫action∫message∫callback_reference∫bsn_parameters object˙ø

action
¬	SEARCH

ˇ
callback_referenceË
Â∫transaction_id∫
message_id object˙õ
ú
transaction_idâ
Ü stringíza unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
z

message_idl
j stringí^generated by the <code>BSN</code> - a unique id representing a specific request/callback cycleíõthe reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
Ú
bsn_parametersﬂ
‹∫uid∫name∫callback_url object˙≥
3
uid,*
(#/components/schemas/Node/properties/uid
5
name-+
)#/components/schemas/Node/properties/name
E
callback_url53
1#/components/schemas/Node/properties/callback_url
´
messageü
ú object˙è
å
intentÅ
˛∫intent object˙¢
l
search_string[
Y stringíMA raw free text search string describing the name or description of a seller.
æ
fulfillmentÆ
´ object˙û
û
coordinateséã
 #/components/schemas/CoordinatesgA location based search describing the position in space where the product or service is to be availed.
{
fulfillment_modege
$#/components/schemas/FulfillmentMode=the Buyer's intended means of receiving the goods or services
Ê
providerŸ
÷ object˙“
œ

descriptor¿
Ω object˙∞
w
nameo
m stringíaThe name of the provider, allowing for specific provider level search queries like 'Bob's Pizza'.
5
id/-
+#/components/schemas/Provider/properties/idítDetails of the provider that the Buyer wants to order from, including a detailed descriptor for name-based searches.
z
merchant_category_codes_
] arrayÚ/
-+
)#/components/schemas/MerchantCategoryCodeí Array of merchant category codes
◊
itemŒ
À object˙–
Õ

descriptoræ
ª object˙Æ
r
namej
h stringí\The name of the item, allowing for specific item level search queries like 'Bread and Milk'.
8
id20
.#/components/schemas/CatalogItem/properties/idíkDetails of the item that the Buyer wants to order, including a detailed descriptor for name-based searches.
ß
cuisine_typesï
í arrayÚI
G
E stringí9The network defined array of strings, i.e., Burger, Pizzaí;Details of the cuisine types that the Buyer wants to avail.
á
fulfillment_modesr
p arrayÚ*
(&
$#/components/schemas/FulfillmentModeí8The modes of fulfillment that the Buyer is interested iníCA Buyers search intent to purchase or avail items from the network.
ﬁ
OnSearch—
Œ
,a PSN's response to a Buyer's search requestù
ö
application/jsonÖ
Ç
ˇ∫action∫message∫callback_reference∫psn_parameters object˙π

action
¬
ON_SEARCH

ˇ
callback_referenceË
Â∫transaction_id∫
message_id object˙õ
ú
transaction_idâ
Ü stringíza unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
z

message_idl
j stringí^generated by the <code>BSN</code> - a unique id representing a specific request/callback cycleíõthe reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
Ú
psn_parametersﬂ
‹∫uid∫name∫callback_url object˙≥
3
uid,*
(#/components/schemas/Node/properties/uid
5
name-+
)#/components/schemas/Node/properties/name
E
callback_url53
1#/components/schemas/Node/properties/callback_url
¢

messageñ

ì
∫	providers object˙˙	
˜	
	providersÈ	
Ê	JProvider List object˙Ó
g

descriptorYW
#/components/schemas/Descriptor4A comprehensive description of the provider catalog.
¨
fulfillment_modesñ
ì arrayÚ*
(&
$#/components/schemas/FulfillmentModeí[Modes of fulfillment directly supported by the PSN, subject to provider-specific overrides.
Ç
	providersu
s arrayÚ#
!
#/components/schemas/ProvideríBA list of providers managed by the PSN, detailing their offerings.
q
expiration_time^
\ stringíDExpiry timestamp indicating when the provider list becomes obsolete.ö	date-time
\
time_to_liveL
J integerí=Time in seconds before the provider list should be refreshed.íÿ- The providers that a Provider Supporting Node represents. Typically sent in response to a search query from a Buyer Supporting Node. It encompasses payment terms, and fulfillment options the Provider Supporting Node supports. A ttl can be provided, indicating how long the Buyer Supporting Node is permitted to cache and utilize the provider list. - The PSN must respond with a list of providers, the level of detail that the response contains is up to the PSN. If the BSN requires more information about a provider, they can trigger another research for the specific provider targeted at the PSN.

§
Selectô
ñ
%a <code>Buyer<code>'s item selectionsÏ
È
application/json‘
—
Œ∫action∫message∫callback_reference∫bsn_parameters object˙à

action
¬	SELECT

ˇ
callback_referenceË
Â∫transaction_id∫
message_id object˙õ
ú
transaction_idâ
Ü stringíza unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
z

message_idl
j stringí^generated by the <code>BSN</code> - a unique id representing a specific request/callback cycleíõthe reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
Ú
bsn_parametersﬂ
‹∫uid∫name∫callback_url object˙≥
3
uid,*
(#/components/schemas/Node/properties/uid
5
name-+
)#/components/schemas/Node/properties/name
E
callback_url53
1#/components/schemas/Node/properties/callback_url
Ù

messageË

Â
 object˙ÿ

®
provider_idòï
+#/components/schemas/Provider/properties/idfthe unique identifier of the <code>Provider</code> that the <code>Buyer</code> is selecting items from
“
fulfillment_intentª
∏∫buyer_details∫fulfillment_mode object˙ë
L
buyer_details;9
#/components/schemas/BuyerThe details about the buyer
n
fulfillment_modeZX
$#/components/schemas/FulfillmentMode0should be one of the available fulfillment modes
¢
order_notesí
è stringíÇA note that's associated with the cart. For example, a note for a merchant from a buyer about a specific request with their order.
,
fulfillment_time
 integerö	date-timeítRepresents the action of a <code>Buyer</code> to update fulfillment specifications such as time, mode, and location.
≈
catalog_items≥
∞ arrayÚ§
°
û∫id∫quantity object˙Å
Ñ
id~|
.#/components/schemas/CatalogItem/properties/idJthe <code>CatalogItemId</code> from the <code>CatalogItem</code> selection
@
quantity4
2 integeríThe quantity of the selectionöint32
P
special_instructions8
6 stringí*special instructions for the selected item
„
catalog_item_modifiers»
≈ arrayÚπ
∂
≥∫id∫quantity object˙ñ
@
id:8
6#/components/schemas/CatalogItemModifier/properties/id
R
quantityF
D integerí/The quantity of the selections for the modifieröint32

required
 
À
OnSelectæ
ª
!a <code>Buyer<code>'s cart objectï
í
application/json˝
˙
˜∫action∫message∫callback_reference∫psn_parameters object˙±

action
¬
ON_SELECT

ˇ
callback_referenceË
Â∫transaction_id∫
message_id object˙õ
ú
transaction_idâ
Ü stringíza unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
z

message_idl
j stringí^generated by the <code>BSN</code> - a unique id representing a specific request/callback cycleíõthe reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
Ú
psn_parametersﬂ
‹∫uid∫name∫callback_url object˙≥
3
uid,*
(#/components/schemas/Node/properties/uid
5
name-+
)#/components/schemas/Node/properties/name
E
callback_url53
1#/components/schemas/Node/properties/callback_url
ö
messageé
ã∫cart∫fulfillment_term object˙e
%
cart
#/components/schemas/Cart
<
fulfillment_term(&
$#/components/schemas/FulfillmentTerm
‹
Init”
–
9a <code>Buyer<code>'s information to initialize the Cart.í
è
application/json˙
˜
Ù∫action∫message∫callback_reference∫bsn_parameters object˙Æ

action
¬INITIALIZE

ˇ
callback_referenceË
Â∫transaction_id∫
message_id object˙õ
ú
transaction_idâ
Ü stringíza unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
z

message_idl
j stringí^generated by the <code>BSN</code> - a unique id representing a specific request/callback cycleíõthe reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
Ú
bsn_parametersﬂ
‹∫uid∫name∫callback_url object˙≥
3
uid,*
(#/components/schemas/Node/properties/uid
5
name-+
)#/components/schemas/Node/properties/name
E
callback_url53
1#/components/schemas/Node/properties/callback_url
ñ
messageä
á∫cart_id∫fulfillment_intent object˙€
6
cart_id+)
'#/components/schemas/Cart/properties/id
†
fulfillment_intentâ
Ü∫buyer_details∫fulfillment_mode object˙ﬂ
L
buyer_details;9
#/components/schemas/BuyerThe details about the buyer
<
fulfillment_mode(&
$#/components/schemas/FulfillmentMode
¢
order_notesí
è stringíÇA note that's associated with the cart. For example, a note for a merchant from a buyer about a specific request with their order.
,
fulfillment_time
 integerö	date-timeítRepresents the action of a <code>Buyer</code> to update fulfillment specifications such as time, mode, and location.
ò	
OnInitç	
ä	
îa <code>Buyer<code>'s cart and the required payment, cancellation, fulfillment and refund terms that must be met to successfully fulfill this order.
Ì
application/jsonÿ
’
“∫action∫message∫callback_reference∫psn_parameters object˙å

action
¬
ON_INIT

ˇ
callback_referenceË
Â∫transaction_id∫
message_id object˙õ
ú
transaction_idâ
Ü stringíza unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
z

message_idl
j stringí^generated by the <code>BSN</code> - a unique id representing a specific request/callback cycleíõthe reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
Ú
psn_parametersﬂ
‹∫uid∫name∫callback_url object˙≥
3
uid,*
(#/components/schemas/Node/properties/uid
5
name-+
)#/components/schemas/Node/properties/name
E
callback_url53
1#/components/schemas/Node/properties/callback_url
x
messagem
k∫cart∫terms object˙P
%
cart
#/components/schemas/Cart
'
terms
#/components/schemas/Terms
ö
Statusè
å
2A <code>Buyer</code>'s status request for an Order’
“
application/jsonΩ
∫
∑∫action∫message∫callback_reference∫bsn_parameters object˙Ò

action
¬	STATUS

ˇ
callback_referenceË
Â∫transaction_id∫
message_id object˙õ
ú
transaction_idâ
Ü stringíza unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
z

message_idl
j stringí^generated by the <code>BSN</code> - a unique id representing a specific request/callback cycleíõthe reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
Ú
bsn_parametersﬂ
‹∫uid∫name∫callback_url object˙≥
3
uid,*
(#/components/schemas/Node/properties/uid
5
name-+
)#/components/schemas/Node/properties/name
E
callback_url53
1#/components/schemas/Node/properties/callback_url
^
messageS
Q∫order_id object˙:
8
order_id,*
(#/components/schemas/Order/properties/id
Î
OnStatusﬁ
€
The updated Order.ƒ
¡
application/json¨
©
¶∫action∫message∫callback_reference∫psn_parameters object˙‡

action
¬
ON_STATUS

ˇ
callback_referenceË
Â∫transaction_id∫
message_id object˙õ
ú
transaction_idâ
Ü stringíza unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
z

message_idl
j stringí^generated by the <code>BSN</code> - a unique id representing a specific request/callback cycleíõthe reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
Ú
psn_parametersﬂ
‹∫uid∫name∫callback_url object˙≥
3
uid,*
(#/components/schemas/Node/properties/uid
5
name-+
)#/components/schemas/Node/properties/name
E
callback_url53
1#/components/schemas/Node/properties/callback_url
J
message?
=∫order object˙)
'
order
#/components/schemas/Order
/
Cancel%#
!#/components/requestBodies/Status
˘
OnCancelÏ
È
The updated Order.“
œ
application/json∫
∑
¥∫action∫message∫callback_reference∫psn_parameters object˙Ó

action
¬
ON_CANCEL

ˇ
callback_referenceË
Â∫transaction_id∫
message_id object˙õ
ú
transaction_idâ
Ü stringíza unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
z

message_idl
j stringí^generated by the <code>BSN</code> - a unique id representing a specific request/callback cycleíõthe reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
Ú
psn_parametersﬂ
‹∫uid∫name∫callback_url object˙≥
3
uid,*
(#/components/schemas/Node/properties/uid
5
name-+
)#/components/schemas/Node/properties/name
E
callback_url53
1#/components/schemas/Node/properties/callback_url
X
messageM
K∫order object˙7
5
order,*
(#/components/schemas/Order/properties/id2Ï
È
	Signature€
ÿB’
“ stringí≈Signature keyId="{registry_node_id}",algorithm="ecdsa-p256-keccak256",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64url(secp256k1(signing string))":Ø
¨
NodeAuthü
ú
apiKey˛This header authenticates requests using a digital signature. The format for the `Authorization` header is as follows:
`Signature keyId="{registry_node_uid}",algorithm="ecdsa-p256-keccak256",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64url(secp256k1(signing string))"`
Where: - `registry_node_uid` The unique registry identifier of the sending node - `algorithm` specifies the cryptographic algorithm used, here "ecdsa-p256-keccak256". - `created` is the UNIX timestamp when the signature was created. - `expires` is the UNIX timestamp when the signature expires. - `headers` details the parts of the request that are signed, specifically the creation time, expiration time, and the digest. - `signature` is the digital signature, encoded in Base64url, created by signing the requestBody with the node's private key using the secp256k1 curve.
	Signature"header2

NodeAuth 